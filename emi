# include  < Arduino.h >
# include  < WiFi.h >
# include  < HTTPClient.h >
# include  < ArduinoJson.h >

clase  conexionWeb {
  privado:

  público:
    conexionWeb ( const  char * _SSID, const  char * _PASSWORD) {
      Wifi. comenzar (_SSID, _PASSWORD);
      while (WiFi. status ()! = WL_CONNECTED) {
          retraso ( 500 );
          De serie. print ( " ... " );
      }
    }

}; 

clase  DateTime
{
privado:
  int defaultTime;
  struct  tm timeinfo;
  const  char * ntpServer = " pool.ntp.org " ;
  const  long gmtOffset_sec = 0 ;
  const  int daylightOffset_sec = 0 ;

público:
  char timeStringBuff [ 20 ];
  DateTime ()
  {
    defaultTime = 0 ;
    configTime (gmtOffset_sec, daylightOffset_sec, ntpServer);
    getTime ();
  }

  nulo  getTime ()
  {   
    setLocalTime ();
  }

  void  setLocalTime ()
  {

    if (! getLocalTime (& timeinfo))
    {
    }
    strftime (timeStringBuff, sizeof (timeStringBuff), " % Y-% m-% dT% H:% M:% SZ " , & timeinfo);
  }
};
conexionWeb * webInterface;
DateTime * reloj;
StaticJsonDocument < 512 > horaActual;


const  char * ssid = " Ubee16F8-2.4G " ;
const  char * passwrd = " 5F99F616F8 " ;


 configuración nula () {
  De serie. comenzar ( 115200 );
  webInterface = new  conexionWeb (ssid, passwrd);
  reloj = new  DateTime ();

}
int suma = 0 ;
 bucle vacío () {
  suma ++;
  horaActual. claro ();
  reloj-> getTime ();
  horaActual [ " hora " ] = reloj-> timeStringBuff ;
  horaActual [ " Sumatoria " ] = suma;
  serializeJson (horaActual, Serial);
  De serie. println ( " " );
  retraso ( 1000 );
}
